{"version":3,"file":"static/js/9.7671ef29.chunk.js","mappings":"6SAUaA,EAAMC,EAAAA,GAAAA,IAAH,4tBAONC,EAUEC,EAUAC,GAOCC,EAAYJ,EAAAA,GAAAA,IAAH,uUAoBTK,EAAeL,EAAAA,GAAAA,OAAH,oYAwBZM,EAAmBN,EAAAA,GAAAA,EAAH,+aAgBDO,EAAAA,GAOfC,EAAQR,EAAAA,GAAAA,IAAH,uNAaLS,EAAaT,EAAAA,GAAAA,IAAH,6FAMVU,EAAQV,EAAAA,GAAAA,MAAH,mXAwBLW,GAAaX,EAAAA,EAAAA,IAAOY,EAAAA,GAAPZ,CAAH,oVAoBVa,EAASb,EAAAA,GAAAA,OAAH,+VAuBNc,EAAad,EAAAA,GAAAA,EAAH,wJASVe,EAASf,EAAAA,GAAAA,IAAH,wFAKNgB,EAAUhB,EAAAA,GAAAA,EAAH,+NAgBPiB,GAAWjB,EAAAA,EAAAA,IAAOkB,EAAAA,GAAPlB,CAAH,gM,SC1MN,SAASmB,IACtB,OACE,SAACpB,EAAD,WACE,SAAC,KAAD,CACEqB,cAAe,CACbC,KAAM,GACNC,MAAO,GACPC,SAAU,GACVC,eAAgB,IAElBC,iBAAkBC,EAAAA,GAAW,CAC3BL,KAAMK,EAAAA,KACHC,IAAI,GAAI,wGACRC,SAAS,0FACZN,MAAOI,EAAAA,KACJJ,MAAM,mFACNM,SAAS,0FACZL,SAAUG,EAAAA,KACPG,IAAI,EAAG,iGACPD,SAAS,0FACZJ,eAAgBE,EAAAA,KACbG,IAAI,EAAG,iGACPD,SAAS,4FAEdE,SAAU,SAACC,EAAD,GAAgC,IAArBC,EAAoB,EAApBA,cACnBC,YAAW,WACTC,MAAMC,KAAKC,UAAUL,EAAQ,KAAM,IACnCC,GAAc,EACf,GAAE,IACJ,EA1BH,UA4BE,SAAC,KAAD,WACE,UAAC5B,EAAD,YACE,UAACI,EAAD,YACE,SAACH,EAAD,CAAcgC,KAAK,SAAnB,UACE,SAAC/B,EAAD,wBAEF,UAACG,EAAD,YACE,SAACC,EAAD,CAAO4B,QAAQ,OAAf,kCACA,SAAC3B,EAAD,CAAYU,KAAK,OAAOgB,KAAK,OAAOE,YAAY,SAChD,SAAC,KAAD,CAAclB,KAAK,aAErB,UAACZ,EAAD,YACE,SAACC,EAAD,CAAO4B,QAAQ,QAAf,gHACA,SAAC3B,EAAD,CACEU,KAAK,QACLgB,KAAK,QACLE,YAAY,oBAEd,SAAC,KAAD,CAAclB,KAAK,cAErB,UAACZ,EAAD,YACE,SAACC,EAAD,CAAO4B,QAAQ,WAAf,mDACA,SAAC3B,EAAD,CAAYU,KAAK,WAAWgB,KAAK,OAAOE,YAAY,SACpD,SAAC,KAAD,CAAclB,KAAK,iBAErB,SAACX,EAAD,CAAO4B,QAAQ,iBAAf,sHACA,SAAC3B,EAAD,CAAYU,KAAK,iBAAiBgB,KAAK,OAAOE,YAAY,SAC1D,SAAC,KAAD,CAAclB,KAAK,uBAErB,SAACR,EAAD,CAAQwB,KAAK,SAAb,UACE,SAACvB,EAAD,4GAEF,SAACC,EAAD,WACE,UAACC,EAAD,mEACc,SAACC,EAAD,CAAUuB,GAAG,SAAb,+DA6B3B,C","sources":["pages/styled/Register.styled.js","pages/Register.js"],"sourcesContent":["import styled from 'styled-components';\nimport desktop from '../../img/desktop.jpg';\nimport tablet from '../../img/tablet.jpg';\nimport mobile from '../../img/mobile.jpg';\nimport google from '../../img/googleicon.svg';\n// import vector from '../../img/firstpagevector.svg';\n\nimport { Field } from 'formik';\nimport { NavLink } from 'react-router-dom';\n\nexport const Box = styled.div`\n  width: 320px;\n  height: 648px;\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  background-image: linear-gradient(rgba(9, 30, 63, 0.8), rgba(9, 30, 63, 0.8)),\n    url(${mobile});\n  margin-top: 60px;\n\n  @media screen and (min-width: 768px) {\n    width: 768px;\n    height: 797px;\n    background-image: linear-gradient(\n        rgba(9, 30, 63, 0.8),\n        rgba(9, 30, 63, 0.8)\n      ),\n      url(${tablet});\n  }\n\n  @media screen and (min-width: 1280px) {\n    width: 549px;\n    height: 850px;\n    background-image: linear-gradient(\n        rgba(9, 30, 63, 0.8),\n        rgba(9, 30, 63, 0.8)\n      ),\n      url(${desktop});\n  }\n\n  background-repeat: no-repeat;\n  background-size: cover;\n`;\n\nexport const FormInput = styled.div`\n  height: 609px;\n\n  @media screen and (min-width: 768px) {\n    position: absolute;\n    width: 400px;\n    left: 185px;\n    top: 124px;\n    background: #ffffff;\n  }\n\n  @media screen and (min-width: 1280px) {\n    left: 75px;\n    top: 150px;\n  }\n\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const GoogleButton = styled.button`\n  margin-top: 32px;\n  margin-bottom: 28px;\n\n  @media screen and (min-width: 768px) {\n    margin-top: 40px;\n  }\n\n  width: 150px;\n  height: 40px;\n  left: 310px;\n  top: 164px;\n  margin-left: auto;\n  margin-right: auto;\n\n  background: #f5f7fa;\n  box-shadow: 0px 2px 2px rgba(9, 30, 63, 0.15);\n  border: none;\n\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\nexport const TextGoogleButton = styled.p`\n  font-style: normal;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 38px;\n\n  text-align: center;\n\n  color: #707375;\n\n  /* ::before {\n    content: '';\n    margin-right: 14px;\n    padding-top: 11px;\n    padding-left: 2px;\n    padding-right: 2px;\n    background-image: url(${google});\n    background-repeat: no-repeat;\n    background-position: center;\n    background-size: contain;\n  } */\n`;\n\nexport const Input = styled.div`\n  margin-bottom: 20px;\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 32px;\n  }\n\n  margin-left: auto;\n  margin-right: auto;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const InputField = styled.div`\n  margin-bottom: 20px;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Label = styled.label`\n  width: 156px;\n  left: 20px;\n  top: 160px;\n  margin-bottom: 8px;\n\n  font-style: normal;\n  font-weight: 600;\n  font-size: 14px;\n  line-height: 17px;\n\n  color: #ffffff;\n  @media screen and (min-width: 768px) {\n    width: 154px;\n    height: 17px;\n    left: 115px;\n    top: 353px;\n\n    font-weight: 500;\n\n    color: #898f9f;\n  }\n`;\n\nexport const FieldInput = styled(Field)`\n  width: 280px;\n  height: 42px;\n  left: 20px;\n  top: 185px;\n  padding-left: 8px;\n\n  @media screen and (min-width: 768px) {\n    width: 320px;\n    left: 115px;\n    top: 378px;\n    padding-left: 12px;\n  }\n\n  background: #f5f7fa;\n  box-shadow: inset 0px 1px 2px rgba(29, 29, 27, 0.15);\n\n  border: none;\n`;\n\nexport const Button = styled.button`\n  width: 280px;\n  height: 60px;\n  left: 20px;\n  top: 334px;\n  margin-bottom: 20px;\n\n  @media screen and (min-width: 768px) {\n    width: 320px;\n    left: 115px;\n    top: 539px;\n\n    &:hover {\n      cursor: pointer;\n    }\n  }\n\n  background: #ff6b08;\n  margin-left: auto;\n  margin-right: auto;\n  border: none;\n`;\n\nexport const TextButton = styled.p`\n  font-style: normal;\n  font-weight: 600;\n  font-size: 16px;\n  line-height: 20px;\n  text-align: center;\n  color: #ffffff;\n`;\n\nexport const NavBox = styled.div`\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n`;\nexport const NavText = styled.p`\n  width: 135px;\n  height: 16px;\n  left: 317px;\n  top: 677px;\n\n  font-style: normal;\n  font-weight: 500;\n  font-size: 13px;\n  line-height: 16px;\n\n  text-align: center;\n\n  color: #898f9f;\n`;\n\nexport const NavLogin = styled(NavLink)`\n  font-style: normal;\n  font-weight: 500;\n  font-size: 13px;\n  line-height: 16px;\n\n  text-decoration-line: underline;\n  text-align: center;\n\n  color: #ff6b08;\n`;\n\n// export const Title = styled.h1`\n//   margin-bottom: 32px;\n//   font-family: 'Abril Fatface';\n//   font-weight: 400;\n//   font-size: 34px;\n//   line-height: 1.12;\n//   color: #242a37;\n//   text-align: center;\n//   @media screen and (min-width: 768px) {\n//     margin-bottom: 48px;\n//   }\n// `;\n\n// export const List = styled.ul`\n//   list-style: none;\n// `;\n\n// export const Subtitle = styled.h2`\n//   margin-bottom: 14px;\n//   //   font-family: 'Montserrat';\n//   font-weight: 500;\n//   font-size: 20px;\n//   line-height: 1.9;\n//   color: #242a37;\n// `;\n\n// export const MainListItem = styled.li`\n//   :first-child {\n//     margin-bottom: 24px;\n//   }\n//   @media screen and (min-width: 768px) {\n//     :first-child {\n//       margin-bottom: 32px;\n//     }\n//   }\n// `;\n\n// export const ListItem = styled.li`\n//   //   font-family: 'Montserrat';\n//   font-weight: 500;\n//   font-size: 14px;\n//   line-height: 1.21;\n//   color: #898f9f;\n//   ::before {\n//     content: '';\n//     margin-right: 12px;\n//     padding-top: 1px;\n//     padding-left: 2px;\n//     padding-right: 2px;\n//     background-image: url(${vector});\n//     background-repeat: no-repeat;\n//     background-position: center;\n//     background-size: contain;\n//     color: #ff6b08;\n//   }\n//   :not(:last-child) {\n//     margin-bottom: 12px;\n//   }\n// `;\n","import * as React from 'react';\nimport { Formik, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\n\nimport {\n  Box,\n  FormInput,\n  GoogleButton,\n  TextGoogleButton,\n  Input,\n  InputField,\n  Label,\n  FieldInput,\n  Button,\n  TextButton,\n  NavLogin,\n  NavText,\n  NavBox,\n  //  Title,\n  // List,\n  // MainListItem,\n  // Subtitle,\n  // ListItem,\n} from './styled/Register.styled';\n\nexport default function Register() {\n  return (\n    <Box>\n      <Formik\n        initialValues={{\n          name: '',\n          email: '',\n          password: '',\n          repeatPassword: '',\n        }}\n        validationSchema={Yup.object({\n          name: Yup.string()\n            .max(15, 'Максимум 15 символів')\n            .required(\"Поле обов'язкове\"),\n          email: Yup.string()\n            .email('Невірна адреса')\n            .required(\"Поле обов'язкове\"),\n          password: Yup.string()\n            .min(6, 'Мінімум 6 символів')\n            .required(\"Поле обов'язкове\"),\n          repeatPassword: Yup.string()\n            .min(6, 'Мінімум 6 символів')\n            .required(\"Поле обов'язкове\"),\n        })}\n        onSubmit={(values, { setSubmitting }) => {\n          setTimeout(() => {\n            alert(JSON.stringify(values, null, 2));\n            setSubmitting(false);\n          }, 400);\n        }}\n      >\n        <Form>\n          <FormInput>\n            <Input>\n              <GoogleButton type=\"submit\">\n                <TextGoogleButton>Google</TextGoogleButton>\n              </GoogleButton>\n              <InputField>\n                <Label htmlFor=\"name\">Ім'я</Label>\n                <FieldInput name=\"name\" type=\"text\" placeholder=\"...\" />\n                <ErrorMessage name=\"name\" />\n              </InputField>\n              <InputField>\n                <Label htmlFor=\"email\">Електронна адреса</Label>\n                <FieldInput\n                  name=\"email\"\n                  type=\"email\"\n                  placeholder=\"your@email.com\"\n                />\n                <ErrorMessage name=\"email\" />\n              </InputField>\n              <InputField>\n                <Label htmlFor=\"password\">Пароль</Label>\n                <FieldInput name=\"password\" type=\"text\" placeholder=\"...\" />\n                <ErrorMessage name=\"password\" />\n              </InputField>\n              <Label htmlFor=\"repeatPassword\">Підтвердіть пароль</Label>\n              <FieldInput name=\"repeatPassword\" type=\"text\" placeholder=\"...\" />\n              <ErrorMessage name=\"repeatPassword\" />\n            </Input>\n            <Button type=\"submit\">\n              <TextButton>Зареєструватися</TextButton>\n            </Button>\n            <NavBox>\n              <NavText>\n                Вже з нами? <NavLogin to=\"/login\">Увійти</NavLogin>\n              </NavText>\n            </NavBox>\n          </FormInput>\n        </Form>\n      </Formik>\n      {/* <Title>Books Reading</Title>\n      <List>\n        <MainListItem>\n          <Subtitle>Will help you to</Subtitle>\n          <List>\n            <ListItem>Create your goal faster and proceed to read</ListItem>\n            <ListItem>Divide process proportionally for each day</ListItem>\n            <ListItem>Track your success</ListItem>\n          </List>\n        </MainListItem>\n        <MainListItem>\n          <Subtitle>You may also</Subtitle>\n          <List>\n            <ListItem>Pose your own independent point of view</ListItem>\n            <ListItem>\n              Improve your professional skills according to new knowledge\n            </ListItem>\n            <ListItem>Become an interesting interlocutor</ListItem>\n          </List>\n        </MainListItem>\n      </List> */}\n    </Box>\n  );\n}\n"],"names":["Box","styled","mobile","tablet","desktop","FormInput","GoogleButton","TextGoogleButton","google","Input","InputField","Label","FieldInput","Field","Button","TextButton","NavBox","NavText","NavLogin","NavLink","Register","initialValues","name","email","password","repeatPassword","validationSchema","Yup","max","required","min","onSubmit","values","setSubmitting","setTimeout","alert","JSON","stringify","type","htmlFor","placeholder","to"],"sourceRoot":""}