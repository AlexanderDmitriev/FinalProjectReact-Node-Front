{"version":3,"file":"static/js/342.5ad636e7.chunk.js","mappings":"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","sources":["components/Home.styled.jsx","components/FirstPage/FirstPage.styled.jsx","components/FirstPage/FirstPage.jsx","pages/Home.jsx","images/marks.svg","components/Login.styled.jsx","pages/Login.jsx"],"sourcesContent":["import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Nav = styled(NavLink)`\n  text-decoration: none;\n`;\n","import styled from 'styled-components';\nimport { theme } from '../../helpers/theme';\n\nexport const Section = styled.section`\n  padding: 32px 20px 40px 20px;\n\n  @media screen and (min-width: 768px) {\n    padding: 64px 145px 88px 145px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    padding: 179px 154px 239px 127px;\n  }\n`;\n\nexport const Title = styled.h1`\n  margin-bottom: 32px;\n  font-family: 'Abril Fatface';\n  font-weight: 400;\n  font-size: 34px;\n  line-height: 1.12;\n  color: ${theme.colors.titleColor};\n  text-align: center;\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 48px;\n  }\n`;\n\nexport const List = styled.ul`\n  list-style: none;\n`;\n\nexport const Subtitle = styled.h2`\n  margin-bottom: 14px;\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 1.9;\n  color: ${theme.colors.titleColor};\n`;\n\nexport const MainListItem = styled.li`\n  :first-child {\n    margin-bottom: 24px;\n  }\n  @media screen and (min-width: 768px) {\n    :first-child {\n      margin-bottom: 32px;\n    }\n  }\n`;\n\nexport const ListItem = styled.li`\n  display: flex;\n\n  :not(:last-child) {\n    margin-bottom: 12px;\n  }\n`;\n\nexport const Text = styled.p`\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 1.21;\n  color: ${theme.colors.bookDescriptionColor};\n`;\n\nexport const IconWrapper = styled.div`\n  margin-right: 12px;\n  padding-top: 4px;\n  width: 4px;\n  height: 8px;\n`;\n\nexport const Icon = styled.svg`\n  vertical-align: top;\n  color: ${theme.colors.focusColor};\n`;\n\nexport const ButtonList = styled.ul`\n  margin-top: 61px;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  list-style: none;\n  column-gap: 20px;\n  @media screen and (min-width: 768px) {\n    position: absolute;\n    width: 1px;\n    height: 1px;\n    margin: -1px;\n    border: 0;\n    padding: 0;\n    white-space: nowrap;\n    clip-path: inset(100%);\n    clip: rect(0 0 0 0);\n    overflow: hidden;\n  }\n`;\n\nexport const LoginButton = styled.button`\n  min-width: 130px;\n  font-family: inherit;\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 2.71;\n  text-align: center;\n  color: ${theme.colors.titleColor};\n  border: 1px solid #000000;\n  &:hover,\n  &:focus {\n    border: 1px solid ${theme.colors.buttonsBorder};\n  }\n`;\n\nexport const RegisterButton = styled.button`\n  min-width: 130px;\n  font-family: inherit;\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 2.71;\n  text-align: center;\n  color: ${theme.colors.backColor};\n  background: ${theme.colors.focusColor};\n  box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.25);\n  border: 1px solid ${theme.colors.focusColor};\n  &:hover,\n  &:focus {\n    background: #d15807;\n    box-shadow: 0px 2px 4px ${theme.colors.darkShadowColor};\n    border: 1px solid #d15807;\n  }\n`;\n","import {\n  Section,\n  Title,\n  List,\n  Subtitle,\n  ListItem,\n  ButtonList,\n  LoginButton,\n  RegisterButton,\n  MainListItem,\n  Icon,\n  Text,\n  IconWrapper,\n} from './FirstPage.styled';\nimport { NavLink } from 'react-router-dom';\nimport sprite from '../../images/icons.svg';\n\nexport default function FirstPage() {\n  return (\n    <Section>\n      <Title>Books Reading</Title>\n      <List>\n        <MainListItem>\n          <Subtitle>Допоможе вам</Subtitle>\n          <List>\n            <ListItem>\n              <IconWrapper>\n                <Icon width=\"4\" height=\"8\">\n                  <use href={sprite + '#icon-firstpagevector'}></use>\n                </Icon>\n              </IconWrapper>\n              <Text>Швидше сформулювати свою ціль і розпочати читати</Text>\n            </ListItem>\n            <ListItem>\n              <IconWrapper>\n                <Icon width=\"4\" height=\"8\">\n                  <use href={sprite + '#icon-firstpagevector'}></use>\n                </Icon>\n              </IconWrapper>\n              <Text>Пропорційно розподілити навантаження на кожний день</Text>\n            </ListItem>\n            <ListItem>\n              <IconWrapper>\n                <Icon width=\"4\" height=\"8\">\n                  <use href={sprite + '#icon-firstpagevector'}></use>\n                </Icon>\n              </IconWrapper>\n              <Text>Відстежувати особистий успіх</Text>\n            </ListItem>\n          </List>\n        </MainListItem>\n        <MainListItem>\n          <Subtitle>Також ви зможете</Subtitle>\n          <List>\n            <ListItem>\n              <IconWrapper>\n                <Icon width=\"4\" height=\"8\">\n                  <use href={sprite + '#icon-firstpagevector'}></use>\n                </Icon>\n              </IconWrapper>\n              <Text>Формувати особисту думку незалежну від інших</Text>\n            </ListItem>\n            <ListItem>\n              <IconWrapper>\n                <Icon width=\"4\" height=\"8\">\n                  <use href={sprite + '#icon-firstpagevector'}></use>\n                </Icon>\n              </IconWrapper>\n              <Text>\n                Підвищити свої професійні якості опираючись на нові знання\n              </Text>\n            </ListItem>\n            <ListItem>\n              <IconWrapper>\n                <Icon width=\"4\" height=\"8\">\n                  <use href={sprite + '#icon-firstpagevector'}></use>\n                </Icon>\n              </IconWrapper>\n              <Text>Стати цікавим співрозмовником</Text>\n            </ListItem>\n          </List>\n        </MainListItem>\n      </List>\n      <ButtonList>\n        <li>\n          <NavLink to=\"/login\" exact=\"true\">\n            <LoginButton>Увійти</LoginButton>\n          </NavLink>\n        </li>\n        <li>\n          <NavLink to=\"/register\" exact=\"true\">\n            <RegisterButton>Реєстрація</RegisterButton>\n          </NavLink>\n        </li>\n      </ButtonList>\n    </Section>\n  );\n}\n","import authSelectors from 'redux/authAPI/auth-selectors';\nimport { useSelector } from 'react-redux';\nimport { Nav } from 'components/Home.styled';\nimport { useMediaQuery } from 'react-responsive';\nimport FirstPage from 'components/FirstPage/FirstPage';\nimport Login from '../pages/Login';\nimport Library from './Library';\n\nexport default function Home() {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n  const isTablet = useMediaQuery({\n    query: '(min-width: 768px)',\n  });\n\n  return (\n    <>\n      {isTablet ? <Login /> : <FirstPage />}\n\n      {isLoggedIn ? (\n        <Nav to=\"/library\">\n          <Library variant=\"contained\" />\n        </Nav>\n      ) : (\n        <Nav to=\"/login\">\n          <Login variant=\"contained\" />\n        </Nav>\n      )}\n    </>\n  );\n}\n","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgMarks(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 23,\n    height: 17,\n    viewBox: \"0 0 23 17\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M19.8119 0.454997L20.3429 1.281C16.6849 3.68033 14.8559 6.07967 14.8559 8.479C14.8559 9.69833 15.3869 10.4063 16.4489 10.603L18.9269 8.302C19.7135 8.57733 20.4215 9.08867 21.0509 9.836C21.7195 10.544 22.0539 11.4683 22.0539 12.609C22.0539 13.7497 21.6015 14.733 20.6969 15.559C19.7922 16.3457 18.5925 16.739 17.0979 16.739C15.6425 16.739 14.4232 16.2473 13.4399 15.264C12.4959 14.2413 12.0239 12.845 12.0239 11.075C12.0239 7.22033 14.6199 3.68033 19.8119 0.454997ZM8.71986 0.454997L9.25086 1.281C5.59286 3.68033 3.76386 6.07967 3.76386 8.479C3.76386 9.69833 4.29486 10.4063 5.35686 10.603L7.83486 8.302C8.62152 8.57733 9.32952 9.08867 9.95886 9.836C10.6275 10.544 10.9619 11.4683 10.9619 12.609C10.9619 13.7497 10.5095 14.733 9.60486 15.559C8.70019 16.3457 7.50052 16.739 6.00586 16.739C4.55052 16.739 3.33119 16.2473 2.34786 15.264C1.40386 14.2413 0.931856 12.845 0.931856 11.075C0.931856 7.22033 3.52786 3.68033 8.71986 0.454997Z\",\n    fill: \"#FF6B08\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgMarks);\nexport default __webpack_public_path__ + \"static/media/marks.35ca8804f82dc4106ff0d7dc90ddc131.svg\";\nexport { ForwardRef as ReactComponent };","import styled from 'styled-components';\nimport mobile from '../images/login + register img/mobile/mobile.jpg';\nimport mobile2x from '../images/login + register img/mobile/mobile@2x.jpg';\nimport tablet from '../images/login + register img/tablet/tablet.jpg';\nimport tablet2x from '../images/login + register img/tablet/tablet@2x.jpg';\nimport desktop from '../images/login + register img/desktop/desktop.jpg';\nimport desktop2x from '../images/login + register img/desktop/desktop@2x.jpg';\n\nimport marks from '../images/marks.svg';\nimport google from '../images/googleicon.svg';\n\nimport { Field } from 'formik';\nimport { NavLink } from 'react-router-dom';\n/* import {theme} from '../helpers/theme'; */\n\nexport const Box = styled.div`\n  display: flex;\n  flex-direction: column;\n  @media screen and (min-width: 1280px) {\n    flex-direction: row;\n  }\n`;\n\nexport const FormBox = styled.div`\n  /* width: 320px; */\n  height: 458px;\n  background-image: linear-gradient(rgba(9, 30, 63, 0.8), rgba(9, 30, 63, 0.8)),\n    url(${mobile});\n\n  @media screen and (min-device-pixel-ratio: 2),\n    (min-resolution: 192dpi),\n    (min-resolution: 2dppx) {\n    background-image: linear-gradient(\n        rgba(9, 30, 63, 0.8),\n        rgba(9, 30, 63, 0.8)\n      ),\n      url(${mobile2x});\n  }\n\n  @media screen and (min-width: 768px) {\n    /* width: 768px; */\n    height: 619px;\n    background-image: linear-gradient(\n        rgba(9, 30, 63, 0.8),\n        rgba(9, 30, 63, 0.8)\n      ),\n      url(${tablet});\n\n    @media screen and (min-device-pixel-ratio: 2),\n      (min-resolution: 192dpi),\n      (min-resolution: 2dppx) {\n      background-image: linear-gradient(\n          rgba(9, 30, 63, 0.8),\n          rgba(9, 30, 63, 0.8)\n        ),\n        url(${tablet2x});\n    }\n  }\n\n  @media screen and (min-width: 1280px) {\n    width: 549px;\n    height: 850px;\n    background-image: linear-gradient(\n        rgba(9, 30, 63, 0.8),\n        rgba(9, 30, 63, 0.8)\n      ),\n      url(${desktop});\n\n    @media screen and (min-device-pixel-ratio: 2),\n      (min-resolution: 192dpi),\n      (min-resolution: 2dppx) {\n      background-image: linear-gradient(\n          rgba(9, 30, 63, 0.8),\n          rgba(9, 30, 63, 0.8)\n        ),\n        url(${desktop2x});\n    }\n  }\n\n  background-repeat: no-repeat;\n  background-size: cover;\n`;\n\nexport const FormInput = styled.div`\n  height: 450px;\n\n  @media screen and (min-width: 768px) {\n    margin: 0 auto;\n    width: 400px;\n    background: #ffffff;\n    margin-top: 64px;\n    margin-bottom: 129px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    left: 75px;\n    top: 150px;\n    margin-top: 90px;\n  }\n\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const GoogleButton = styled.button`\n  margin-top: 32px;\n  margin-bottom: 28px;\n  border-radius: 2px;\n  :hover {\n    background-color: #ebf0f7;\n  }\n\n  @media screen and (min-width: 768px) {\n    margin-top: 40px;\n  }\n\n  width: 150px;\n  height: 40px;\n  left: 310px;\n  top: 164px;\n  margin-left: auto;\n  margin-right: auto;\n\n  background: #f5f7fa;\n  box-shadow: 0px 2px 2px rgba(9, 30, 63, 0.15);\n  border: none;\n`;\n\nexport const TextGoogleButton = styled.p`\n  font-style: normal;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 38px;\n\n  text-align: center;\n\n  color: #707375;\n\n  ::before {\n    content: '';\n    margin-right: 16px;\n    padding-left: 10px;\n    padding-right: 10px;\n    background-image: url(${google});\n    background-repeat: no-repeat;\n    background-position: center;\n    background-size: contain;\n  }\n`;\n\nexport const Input = styled.div`\n  margin-bottom: 20px;\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 32px;\n  }\n\n  margin-left: auto;\n  margin-right: auto;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const InputEmail = styled.div`\n  margin-bottom: 20px;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Label = styled.label`\n  width: 156px;\n  left: 20px;\n  top: 160px;\n  margin-bottom: 8px;\n\n  font-style: normal;\n  font-weight: 600;\n  font-size: 14px;\n  line-height: 17px;\n\n  color: #ffffff;\n  @media screen and (min-width: 768px) {\n    width: 154px;\n    height: 17px;\n    left: 115px;\n    top: 353px;\n\n    font-weight: 500;\n\n    color: #898f9f;\n  }\n`;\n\nexport const Star = styled.span`\n  color: #ff6b08;\n  margin-left: 3px;\n`;\n\nexport const FieldInput = styled(Field)`\n  width: 280px;\n  height: 42px;\n  left: 20px;\n  top: 185px;\n  padding-left: 8px;\n\n  @media screen and (min-width: 768px) {\n    width: 320px;\n    left: 115px;\n    top: 378px;\n    padding-left: 12px;\n  }\n\n  background: #f5f7fa;\n  box-shadow: inset 0px 1px 2px rgba(29, 29, 27, 0.15);\n\n  border: none;\n`;\n\nexport const Button = styled.button`\n  width: 280px;\n  height: 60px;\n  left: 20px;\n  top: 334px;\n  margin-bottom: 16px;\n  :hover {\n    background-color: #fd781f;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 320px;\n    left: 115px;\n    top: 539px;\n    margin-bottom: 20px;\n  }\n\n  background: #ff6b08;\n  margin-left: auto;\n  margin-right: auto;\n  border: none;\n`;\n\nexport const TextButton = styled.p`\n  font-style: normal;\n  font-weight: 600;\n  font-size: 16px;\n  line-height: 20px;\n  text-align: center;\n  color: #ffffff;\n`;\n\nexport const NavRegister = styled(NavLink)`\n  font-style: normal;\n  font-weight: 500;\n  font-size: 13px;\n  line-height: 16px;\n\n  text-decoration-line: underline;\n  text-align: center;\n\n  color: #ff6b08;\n`;\n\nexport const Error = styled.p`\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 1.12;\n  color: red;\n  text-align: center;\n`;\n\nexport const TextBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  @media screen and (min-width: 768px) and (max-width: 1279px) {\n    padding-bottom: 71px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    margin-left: 167px;\n    margin-top: 206px;\n  }\n`;\n\nexport const Mark = styled.div`\n  width: 27px;\n  height: 70px;\n\n  @media screen and (min-width: 768px) {\n    width: 31px;\n    height: 93px;\n  }\n\n  background-image: url(${marks});\n  background-repeat: no-repeat;\n  background-position: center;\n  background-size: contain;\n`;\n\nexport const Text = styled.p`\n  width: 229px;\n  height: 80px;\n  left: 46px;\n  top: 507px;\n\n  font-size: 13px;\n  line-height: 16px;\n\n  margin-bottom: 16px;\n\n  @media screen and (min-width: 768px) {\n    width: 526px;\n    height: 152px;\n    line-height: 38px;\n    font-size: 24px;\n    line-height: 40px;\n\n    margin-bottom: 20px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    width: 397px;\n    height: 200px;\n  }\n\n  font-style: normal;\n  font-weight: 500;\n\n  text-align: center;\n\n  color: #242a37;\n`;\n\nexport const Border = styled.div`\n  width: 100px;\n  height: 0px;\n  left: 110px;\n  top: 603px;\n  margin-bottom: 12px;\n\n  @media screen and (min-width: 768px) {\n    width: 150px;\n    height: 0px;\n  }\n\n  border-bottom: 1px solid rgba(36, 42, 55, 0.5);\n`;\n\nexport const Author = styled.p`\n  font-size: 14px;\n  line-height: 17px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 20px;\n    line-height: 24px;\n  }\n\n  font-style: normal;\n  font-weight: 500;\n  text-align: center;\n  color: #898f9f;\n`;\n","import React from 'react';\nimport { Formik, Form, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport {\n  Box,\n  FormBox,\n  FormInput,\n  GoogleButton,\n  TextGoogleButton,\n  Input,\n  InputEmail,\n  Label,\n  FieldInput,\n  Button,\n  TextButton,\n  Text,\n  Author,\n  NavRegister,\n  TextBox,\n  Mark,\n  Border,\n  Error,\n  Star,\n} from '../components/Login.styled';\n\nimport { useDispatch } from 'react-redux';\nimport authOperations from '../redux/authAPI/auth-operation';\n\nexport default function Login() {\n  const dispatch = useDispatch();\n\n  const validationSchema = yup.object().shape({\n    email: yup\n      .string()\n      .min(2, 'Мінімум 2 символа')\n      .email('Невірна адреса')\n      .required(\"Поле обов'язкове\"),\n    password: yup\n      .string()\n      .min(5, 'Мінімум 5 символів')\n      .max(30, 'Максимум 30 символів')\n      .required(\"Поле обов'язкове\"),\n  });\n\n  return (\n    <>\n      <Box>\n        <FormBox>\n          <Formik\n            initialValues={{ email: '', password: '' }}\n            validateOnBlur\n            validationSchema={validationSchema}\n            onSubmit={(values, { resetForm }) => {\n              dispatch(\n                authOperations.logIn({\n                  email: values.email,\n                  password: values.password,\n                })\n              );\n              /* resetForm(); */\n            }}\n          >\n            {({\n              values,\n              errors,\n              touched,\n              handleChange,\n              handleBlur,\n              isValid,\n              handleSubmit,\n              dirty,\n            }) => (\n              <Form>\n                <FormInput>\n                  <GoogleButton type=\"button\">\n                    <a href=\"http://localhost:3002/api/users/google\">\n                      <TextGoogleButton>Google</TextGoogleButton>\n                    </a>\n                  </GoogleButton>\n                  <Input>\n                    <InputEmail>\n                      <Label htmlFor=\"email\">\n                        Електронна адреса<Star>*</Star>\n                      </Label>\n                      <FieldInput\n                        name=\"email\"\n                        type=\"email\"\n                        placeholder=\"your@email.com\"\n                        value={values.email}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                      />\n                      {touched.email && errors.email && (\n                        <ErrorMessage name=\"email\">\n                          {msg => <Error>{msg}</Error>}\n                        </ErrorMessage>\n                      )}\n                    </InputEmail>\n\n                    <Label htmlFor=\"password\">\n                      Пароль<Star>*</Star>\n                    </Label>\n                    <FieldInput\n                      name=\"password\"\n                      type=\"password\"\n                      placeholder=\"...\"\n                      value={values.password}\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                    />\n                    {touched.password && errors.password && (\n                      <ErrorMessage name=\"password\">\n                        {msg => <Error>{msg}</Error>}\n                      </ErrorMessage>\n                    )}\n                  </Input>\n\n                  <Button\n                    type=\"submit\"\n                    disabled={!isValid && !dirty}\n                    onClick={handleSubmit}\n                  >\n                    <TextButton>Увійти</TextButton>\n                  </Button>\n\n                  <NavRegister to=\"/register\">Реєстрація</NavRegister>\n                </FormInput>\n              </Form>\n            )}\n          </Formik>\n        </FormBox>\n\n        <TextBox>\n          <Mark />\n          <Text>\n            Книги — це кораблі думок, які мандрують по хвилям часу та дбайливо\n            несуть свій дорогоцінний груз від покоління до покоління.\n          </Text>\n          <Border />\n          <Author>Бекон Ф.</Author>\n        </TextBox>\n      </Box>\n    </>\n  );\n}\n"],"names":["Nav","styled","NavLink","Section","Title","theme","List","Subtitle","MainListItem","ListItem","Text","IconWrapper","Icon","ButtonList","LoginButton","RegisterButton","FirstPage","width","height","href","sprite","to","exact","Home","isLoggedIn","useSelector","authSelectors","isTablet","useMediaQuery","query","Login","Library","variant","Box","FormBox","mobile","mobile2x","tablet","tablet2x","desktop","desktop2x","FormInput","GoogleButton","TextGoogleButton","google","Input","InputEmail","Label","Star","FieldInput","Field","Button","TextButton","NavRegister","Error","TextBox","Mark","marks","Border","Author","dispatch","useDispatch","validationSchema","yup","shape","email","min","required","password","max","initialValues","validateOnBlur","onSubmit","values","resetForm","authOperations","errors","touched","handleChange","handleBlur","isValid","handleSubmit","dirty","type","htmlFor","name","placeholder","value","onChange","onBlur","msg","disabled","onClick"],"sourceRoot":""}