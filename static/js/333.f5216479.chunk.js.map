{"version":3,"file":"static/js/333.f5216479.chunk.js","mappings":"mPAIaA,EAAYC,EAAAA,GAAAA,OAAH,ySAQXC,EAAAA,EAAAA,OAAAA,Y,mBCLI,SAASC,IACtB,IAAMC,EAAiBC,EAAAA,KAAaC,MAAM,CACxCC,MAAOF,EAAAA,KAEJG,IAAI,EAAG,wEACPC,IAAI,GAAI,kEACRC,UAAU,kEACVC,SAAS,gEACZC,OAAQP,EAAAA,KAELG,IAAI,EAAG,wEACPC,IAAI,GAAI,kEACRC,UAAU,4DACVC,SAAS,gEACZE,KAAMR,EAAAA,KAAaK,UAAU,iEAAeC,SAAS,gEACrDG,MAAOT,EAAAA,KAAaK,UAAU,mFAAkBC,SAAS,kEAG3D,OACE,+BACE,SAAC,KAAD,CACEI,cAAe,CACbR,MAAO,GACPK,OAAQ,GACRC,KAAM,GACNC,MAAO,IAETE,gBAAc,EACdC,SAAU,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,EACfG,iBAAkBjB,EATpB,SAWG,gBACCkB,EADD,EACCA,OACAC,EAFD,EAECA,OACAC,EAHD,EAGCA,QACAC,EAJD,EAICA,aACAC,EALD,EAKCA,WACAC,EAND,EAMCA,QACAC,EAPD,EAOCA,aACAC,EARD,EAQCA,MARD,OAUC,iBAAKC,UAAU,OAAf,WACE,kBAAOC,QAAQ,QAAf,6EACA,mBACA,kBACED,UAAU,QACVE,MAAO,CAAEC,MAAO,IAAKC,OAAQ,IAC7BhB,MAAOI,EAAOf,MACd4B,SAAUV,EACVW,OAAQV,EACRW,KAAK,OACLC,KAAK,UAENd,EAAQjB,OAASgB,EAAOhB,QACvB,cAAGuB,UAAW,QAAd,SAAwBP,EAAOhB,SAEjC,mBACA,kBAAOwB,QAAQ,SAAf,8CACA,mBACA,kBACED,UAAU,SACVE,MAAO,CAAEC,MAAO,IAAKC,OAAQ,IAC7BhB,MAAOI,EAAOV,OACduB,SAAUV,EACVW,OAAQV,EACRW,KAAK,OACLC,KAAK,WAENd,EAAQZ,QAAUW,EAAOX,SACxB,cAAGkB,UAAW,QAAd,SAAwBP,EAAOX,UAEjC,mBACA,kBAAOmB,QAAQ,OAAf,6EACA,mBACA,kBACED,UAAU,OACVE,MAAO,CAAEC,MAAO,IAAKC,OAAQ,IAC7BhB,MAAOI,EAAOT,KACdsB,SAAUV,EACVW,OAAQV,EACRW,KAAK,OACLC,KAAK,SAENd,EAAQX,MAAQU,EAAOV,OACtB,cAAGiB,UAAW,QAAd,SAAwBP,EAAOV,QAEjC,mBACA,kBAAOkB,QAAQ,QAAf,uHACA,mBACA,kBACED,UAAU,QACVE,MAAO,CAAEC,MAAO,IAAKC,OAAQ,IAC7BhB,MAAOI,EAAOR,MACdqB,SAAUV,EACVW,OAAQV,EACRW,KAAK,OACLC,KAAK,UAENd,EAAQV,OAASS,EAAOT,QACvB,cAAGgB,UAAW,QAAd,SAAwBP,EAAOT,SAEjC,mBAEA,SAAC,KAAD,CAASyB,GAAG,IAAIC,MAAM,OAAtB,UACE,SAACxC,EAAD,CACEyC,UAAWd,IAAYE,EACvBa,QAASd,EACTS,KAAK,SAHP,sDAzEL,KAsFR,C,gBCxHYM,EAAY1C,EAAAA,GAAAA,OAAH,qTACI2C,G,oBCEX,SAASC,IAAW,IAAD,IAC1BC,GAAWC,EAAAA,EAAAA,MAEXC,EAAI,iBAAGF,QAAH,IAAGA,GAAH,UAAGA,EAAUG,aAAb,aAAG,EAAiBC,YAApB,QAA4B,IAEtC,OACE,+BACE,UAACC,EAAA,EAAD,YACE,gBACEnB,MAAO,CAAEC,MAAO,OAAQC,OAAQ,GAAIkB,OAAQ,sBAE9C,SAAC,KAAD,CAASb,GAAIS,EAAMR,MAAM,OAAzB,UACE,SAACG,EAAD,OAGF,SAACxC,EAAD,QAIP,C","sources":["components/library/LibraryForm/LibraryForm.styled.js","components/library/LibraryForm/LibraryForm.jsx","components/library/Library/Library.styled.js","components/library/Library/Library.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { theme } from '../../../helpers/theme';\n// import backArrow from '../../../images/back.png';\n\nexport const AddButton = styled.button`\n  min-width: 171px;\n  //   font-family: 'Montserrat';\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 2.71;\n  text-align: center;\n  /* color: #242a37; */\n  color: ${theme.colors.titleColor};\n  border: 1px solid #000000;\n  &:hover,\n  &:focus {\n    border: 1px solid #f25137;\n  }\n`;\n","import React from 'react';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\n\nimport { AddButton } from './LibraryForm.styled';\nimport { NavLink } from 'react-router-dom';\n\nexport default function LibraryForm() {\n  const validateSchema = yup.object().shape({\n    title: yup\n      .string()\n      .min(2, 'Дуже коротко!')\n      .max(50, 'Надто довге!')\n      .typeError('Назва книги?')\n      .required('Обовязково'),\n    author: yup\n      .string()\n      .min(2, 'Дуже коротко!')\n      .max(50, 'Надто довге!')\n      .typeError('Імя автора?')\n      .required('Обовязково'),\n    year: yup.string().typeError('Вкажіть рік').required('Обовязково'),\n    pages: yup.number().typeError('Потрібно число').required('Обовязково'),\n  });\n\n  return (\n    <>\n      <Formik\n        initialValues={{\n          title: '',\n          author: '',\n          year: '',\n          pages: '',\n        }}\n        validateOnBlur\n        onSubmit={value => console.log(value)}\n        validationSchema={validateSchema}\n      >\n        {({\n          values,\n          errors,\n          touched,\n          handleChange,\n          handleBlur,\n          isValid,\n          handleSubmit,\n          dirty,\n        }) => (\n          <div className=\"form\">\n            <label htmlFor=\"title\">Назва книги </label>\n            <br />\n            <input\n              className=\"title\"\n              style={{ width: 300, height: 40 }}\n              value={values.title}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              type=\"text\"\n              name=\"title\"\n            />\n            {touched.title && errors.title && (\n              <p className={'error'}>{errors.title}</p>\n            )}\n            <br />\n            <label htmlFor=\"author\">Автор </label>\n            <br />\n            <input\n              className=\"author\"\n              style={{ width: 300, height: 40 }}\n              value={values.author}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              type=\"text\"\n              name=\"author\"\n            />\n            {touched.author && errors.author && (\n              <p className={'error'}>{errors.author}</p>\n            )}\n            <br />\n            <label htmlFor=\"year\">Рік випуску </label>\n            <br />\n            <input\n              className=\"year\"\n              style={{ width: 300, height: 40 }}\n              value={values.year}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              type=\"text\"\n              name=\"year\"\n            />\n            {touched.year && errors.year && (\n              <p className={'error'}>{errors.year}</p>\n            )}\n            <br />\n            <label htmlFor=\"pages\">Кількість сторінок </label>\n            <br />\n            <input\n              className=\"pages\"\n              style={{ width: 300, height: 40 }}\n              value={values.pages}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              type=\"text\"\n              name=\"pages\"\n            />\n            {touched.pages && errors.pages && (\n              <p className={'error'}>{errors.pages}</p>\n            )}\n            <br />\n\n            <NavLink to=\"/\" exact=\"true\">\n              <AddButton\n                disabled={!isValid && !dirty}\n                onClick={handleSubmit}\n                type=\"submit\"\n              >\n                Додати\n              </AddButton>\n            </NavLink>\n          </div>\n        )}\n      </Formik>\n    </>\n  );\n}\n","import styled from 'styled-components';\n// import { theme } from '../../../helpers/theme';\nimport backArrow from '../../../images/back.png';\n\nexport const BackArrow = styled.button`\n  background-image: url(${backArrow});\n  height: 12px;\n  width: 24px;\n  top: 96px;\n  left: 44px;\n  background-repeat: no-repeat;\n  background-position: center;\n  background-size: contain;\n  margin-top: 24px;\n  margin-bottom: 32px;\n  border: none;\n\n  //   transform: rotate(180deg);\n`;\n","import React from 'react';\nimport LibraryForm from '../LibraryForm/LibraryForm';\nimport { BackArrow } from './Library.styled';\n\nimport Container from 'helpers/Container';\nimport { NavLink, /* useNavigate, */ useLocation } from 'react-router-dom';\n\nexport default function Library() {\n  const location = useLocation();\n  /* const navigator = useNavigate(); */\n  const path = location?.state?.from ?? '/';\n\n  return (\n    <>\n      <Container>\n        <div\n          style={{ width: 'auto', height: 60, border: '1px solid black' }}\n        ></div>\n        <NavLink to={path} exact=\"true\">\n          <BackArrow />\n        </NavLink>\n\n        <LibraryForm />\n      </Container>\n    </>\n  );\n}\n"],"names":["AddButton","styled","theme","LibraryForm","validateSchema","yup","shape","title","min","max","typeError","required","author","year","pages","initialValues","validateOnBlur","onSubmit","value","console","log","validationSchema","values","errors","touched","handleChange","handleBlur","isValid","handleSubmit","dirty","className","htmlFor","style","width","height","onChange","onBlur","type","name","to","exact","disabled","onClick","BackArrow","backArrow","Library","location","useLocation","path","state","from","Container","border"],"sourceRoot":""}