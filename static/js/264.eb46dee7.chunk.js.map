{"version":3,"file":"static/js/264.eb46dee7.chunk.js","mappings":"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","sources":["images/firstpagevector.svg","components/Register.styled.jsx","pages/Register.jsx"],"sourcesContent":["var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgFirstpagevector(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 4,\n    height: 8,\n    viewBox: \"0 0 4 8\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M3.91561 3.78047L0.489905 0.0904667C0.377666 -0.0303609 0.195949 -0.0301578 0.0838976 0.0910917C-0.0280667 0.212326 -0.0277773 0.408716 0.0844763 0.529637L3.30627 4.00001L0.0843605 7.47038C-0.0278786 7.59131 -0.028168 7.78758 0.0837818 7.90883C0.139952 7.96961 0.213539 8 0.287126 8C0.360525 8 0.433822 7.96981 0.489891 7.90945L3.91561 4.21954C3.96967 4.16145 4 4.08239 4 4.00001C4 3.91764 3.96958 3.83867 3.91561 3.78047Z\",\n    fill: \"#FF6B08\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgFirstpagevector);\nexport default __webpack_public_path__ + \"static/media/firstpagevector.3158c564816e324e859d08b2c56f5594.svg\";\nexport { ForwardRef as ReactComponent };","import styled from 'styled-components';\nimport mobile from '../images/login + register img/mobile/mobile.jpg';\nimport mobile2x from '../images/login + register img/mobile/mobile@2x.jpg';\nimport tablet from '../images/login + register img/tablet/tablet.jpg';\nimport tablet2x from '../images/login + register img/tablet/tablet@2x.jpg';\nimport desktop from '../images/login + register img/desktop/desktop.jpg';\nimport desktop2x from '../images/login + register img/desktop/desktop@2x.jpg';\n\nimport google from '../images/googleicon.svg';\nimport vector from '../images/firstpagevector.svg';\n\nimport { Field } from 'formik';\nimport { NavLink } from 'react-router-dom';\n\nexport const Box = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  @media screen and (min-width: 1280px) {\n    flex-direction: row;\n  }\n`;\n\nexport const FormBox = styled.div`\n  width: 320px;\n  height: 648px;\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  background-image: linear-gradient(rgba(9, 30, 63, 0.8), rgba(9, 30, 63, 0.8)),\n    url(${mobile});\n\n  @media screen and (min-device-pixel-ratio: 2),\n    (min-resolution: 192dpi),\n    (min-resolution: 2dppx) {\n    background-image: linear-gradient(\n        rgba(9, 30, 63, 0.8),\n        rgba(9, 30, 63, 0.8)\n      ),\n      url(${mobile2x});\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 768px;\n    height: 797px;\n    background-image: linear-gradient(\n        rgba(9, 30, 63, 0.8),\n        rgba(9, 30, 63, 0.8)\n      ),\n      url(${tablet});\n\n    @media screen and (min-device-pixel-ratio: 2),\n      (min-resolution: 192dpi),\n      (min-resolution: 2dppx) {\n      background-image: linear-gradient(\n          rgba(9, 30, 63, 0.8),\n          rgba(9, 30, 63, 0.8)\n        ),\n        url(${tablet2x});\n    }\n  }\n\n  @media screen and (min-width: 768px) and (max-width: 1280px) {\n    margin-bottom: 64px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    width: 549px;\n    height: 850px;\n    background-image: linear-gradient(\n        rgba(9, 30, 63, 0.8),\n        rgba(9, 30, 63, 0.8)\n      ),\n      url(${desktop});\n\n    @media screen and (min-device-pixel-ratio: 2),\n      (min-resolution: 192dpi),\n      (min-resolution: 2dppx) {\n      background-image: linear-gradient(\n          rgba(9, 30, 63, 0.8),\n          rgba(9, 30, 63, 0.8)\n        ),\n        url(${desktop2x});\n    }\n  }\n\n  background-repeat: no-repeat;\n  background-size: cover;\n`;\n\nexport const FormInput = styled.div`\n  height: 609px;\n\n  @media screen and (min-width: 768px) {\n    margin: 0 auto;\n    width: 400px;\n    background: #ffffff;\n    margin-top: 64px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    left: 75px;\n    top: 150px;\n    margin-top: 90px;\n  }\n\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const NavGoogle = styled(NavLink)`\n  text-decoration: none;\n`;\n\nexport const GoogleButton = styled.button`\n  margin-top: 32px;\n  margin-bottom: 28px;\n  border-radius: 2px;\n  :hover {\n    background-color: #ebf0f7;\n  }\n\n  @media screen and (min-width: 768px) {\n    margin-top: 40px;\n  }\n\n  width: 150px;\n  height: 40px;\n  left: 310px;\n  top: 164px;\n  margin-left: auto;\n  margin-right: auto;\n\n  background: #f5f7fa;\n  box-shadow: 0px 2px 2px rgba(9, 30, 63, 0.15);\n  border: none;\n`;\n\nexport const TextGoogleButton = styled.p`\n  font-style: normal;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 38px;\n\n  text-align: center;\n\n  color: #707375;\n\n  ::before {\n    content: '';\n    margin-right: 16px;\n    padding-left: 10px;\n    padding-right: 10px;\n    background-image: url(${google});\n    background-repeat: no-repeat;\n    background-position: center;\n    background-size: contain;\n  }\n`;\n\nexport const Input = styled.div`\n  margin-bottom: 20px;\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 32px;\n  }\n\n  margin-left: auto;\n  margin-right: auto;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const InputField = styled.div`\n  margin-bottom: 20px;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Label = styled.label`\n  width: 156px;\n  left: 20px;\n  top: 160px;\n  margin-bottom: 8px;\n\n  font-style: normal;\n  font-weight: 600;\n  font-size: 14px;\n  line-height: 17px;\n\n  color: #ffffff;\n  @media screen and (min-width: 768px) {\n    width: 154px;\n    height: 17px;\n    left: 115px;\n    top: 353px;\n\n    font-weight: 500;\n\n    color: #898f9f;\n  }\n`;\n\nexport const Star = styled.span`\n  color: #ff6b08;\n  margin-left: 3px;\n`;\n\nexport const FieldInput = styled(Field)`\n  width: 280px;\n  height: 42px;\n  left: 20px;\n  top: 185px;\n  padding-left: 8px;\n\n  @media screen and (min-width: 768px) {\n    width: 320px;\n    left: 115px;\n    top: 378px;\n    padding-left: 12px;\n  }\n\n  background: #f5f7fa;\n  box-shadow: inset 0px 1px 2px rgba(29, 29, 27, 0.15);\n\n  border: none;\n`;\n\nexport const Button = styled.button`\n  width: 280px;\n  height: 60px;\n  left: 20px;\n  top: 334px;\n  margin-bottom: 20px;\n  :hover {\n    background-color: #fd781f;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 320px;\n    left: 115px;\n    top: 539px;\n  }\n\n  background: #ff6b08;\n  margin-left: auto;\n  margin-right: auto;\n  border: none;\n`;\n\nexport const TextButton = styled.p`\n  font-style: normal;\n  font-weight: 600;\n  font-size: 16px;\n  line-height: 20px;\n  text-align: center;\n  color: #ffffff;\n`;\n\nexport const NavBox = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  display: flex;\n`;\nexport const NavText = styled.p`\n  padding-right: 5px;\n  height: 16px;\n  left: 317px;\n  top: 677px;\n\n  font-style: normal;\n  font-weight: 500;\n  font-size: 13px;\n  line-height: 16px;\n\n  text-align: center;\n\n  color: #898f9f;\n`;\n\nexport const NavLogin = styled(NavLink)`\n  font-style: normal;\n  font-weight: 500;\n  font-size: 13px;\n  line-height: 16px;\n  text-decoration-line: underline;\n  text-align: center;\n\n  color: #ff6b08;\n`;\n\nexport const Error = styled.p`\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 1.12;\n  color: red;\n  text-align: center;\n`;\n\nexport const TextBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  @media screen and (min-width: 767px) {\n    padding-bottom: 71px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    margin-left: 127px;\n    margin-top: 179px;\n  }\n`;\n\nexport const Title = styled.h1`\n  margin-bottom: 32px;\n  font-family: 'Abril Fatface';\n  font-weight: 400;\n  font-size: 34px;\n  line-height: 1.12;\n  color: #242a37;\n  text-align: center;\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 48px;\n  }\n`;\n\nexport const List = styled.ul`\n  list-style: none;\n`;\n\nexport const Subtitle = styled.h2`\n  margin-bottom: 14px;\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 1.9;\n  color: #242a37;\n`;\n\nexport const MainListItem = styled.li`\n  :first-child {\n    margin-bottom: 24px;\n  }\n  @media screen and (min-width: 768px) {\n    :first-child {\n      margin-bottom: 32px;\n    }\n  }\n`;\n\nexport const ListItem = styled.li`\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 1.21;\n  color: #898f9f;\n  ::before {\n    content: '';\n    margin-right: 12px;\n    padding-top: 1px;\n    padding-left: 2px;\n    padding-right: 2px;\n    background-image: url(${vector});\n    background-repeat: no-repeat;\n    background-position: center;\n    background-size: contain;\n    color: #ff6b08;\n  }\n  :not(:last-child) {\n    margin-bottom: 12px;\n  }\n`;\n","import * as React from 'react';\nimport { Formik, Form, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\n\nimport {\n  Box,\n  FormBox,\n  FormInput,\n  NavGoogle,\n  GoogleButton,\n  TextGoogleButton,\n  Input,\n  InputField,\n  Label,\n  FieldInput,\n  Button,\n  TextButton,\n  NavLogin,\n  NavText,\n  NavBox,\n  TextBox,\n  Title,\n  List,\n  MainListItem,\n  Subtitle,\n  ListItem,\n  Error,\n  Star,\n} from '../components/Register.styled';\n\nimport { useDispatch } from 'react-redux';\nimport authOperations from '../redux/authAPI/auth-operation';\nimport { useMediaQuery } from 'react-responsive';\n\nexport default function Register() {\n  const dispatch = useDispatch();\n\n  const isTablet = useMediaQuery({\n    query: '(min-width: 768px)',\n  });\n\n  const validationSchema = yup.object().shape({\n    name: yup\n      .string()\n      .max(15, 'Максимум 15 символів')\n      .required(\"Поле обов'язкове\"),\n    email: yup.string().email('Невірна адреса').required(\"Поле обов'язкове\"),\n    password: yup\n      .string()\n      .min(5, 'Мінімум 5 символів')\n      .max(30, 'Максимум 30 символів')\n      .required(\"Поле обов'язкове\"),\n    repeat_password: yup\n      .string()\n      .oneOf([yup.ref('password')], 'Паролі не співпадають'),\n  });\n\n  return (\n    <>\n      <Box>\n        <FormBox>\n          <Formik\n            initialValues={{\n              name: '',\n              email: '',\n              password: '',\n              repeat_password: '',\n            }}\n            validateOnBlur\n            validationSchema={validationSchema}\n            onSubmit={(values, { resetForm }) => {\n              dispatch(\n                authOperations.register({\n                  name: values.name,\n                  email: values.email,\n                  password: values.password,\n                  repeat_password: values.repeat_password,\n                })\n              );\n              /* resetForm(); */\n            }}\n          >\n            {({\n              values,\n              errors,\n              touched,\n              handleChange,\n              handleBlur,\n              isValid,\n              handleSubmit,\n              dirty,\n            }) => (\n              <Form>\n                <FormInput>\n                  <Input>\n                    <GoogleButton type=\"button\">\n                      <NavGoogle to=\"https://book-reader-43-back.herokuapp.com/api/users/google\">\n                        <TextGoogleButton>Google</TextGoogleButton>\n                      </NavGoogle>\n                    </GoogleButton>\n                    <InputField>\n                      <Label htmlFor=\"name\">\n                        Ім'я<Star>*</Star>\n                      </Label>\n                      <FieldInput\n                        name=\"name\"\n                        type=\"text\"\n                        placeholder=\"...\"\n                        value={values.name}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                      />\n                      {touched.name && errors.name && (\n                        <ErrorMessage name=\"name\">\n                          {msg => <Error>{msg}</Error>}\n                        </ErrorMessage>\n                      )}\n                    </InputField>\n                    <InputField>\n                      <Label htmlFor=\"email\">\n                        Електронна адреса<Star>*</Star>\n                      </Label>\n                      <FieldInput\n                        name=\"email\"\n                        type=\"email\"\n                        placeholder=\"your@email.com\"\n                        value={values.email}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                      />\n                      {touched.email && errors.email && (\n                        <ErrorMessage name=\"email\">\n                          {msg => <Error>{msg}</Error>}\n                        </ErrorMessage>\n                      )}\n                    </InputField>\n                    <InputField>\n                      <Label htmlFor=\"password\">\n                        Пароль<Star>*</Star>\n                      </Label>\n                      <FieldInput\n                        name=\"password\"\n                        type=\"password\"\n                        placeholder=\"...\"\n                        value={values.password}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                      />\n                      {touched.password && errors.password && (\n                        <ErrorMessage name=\"password\">\n                          {msg => <Error>{msg}</Error>}\n                        </ErrorMessage>\n                      )}\n                    </InputField>\n                    <Label htmlFor=\"repeat_password\">\n                      Підтвердіть пароль<Star>*</Star>\n                    </Label>\n                    <FieldInput\n                      name=\"repeat_password\"\n                      type=\"password\"\n                      placeholder=\"...\"\n                      value={values.repeat_password}\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                    />\n                    {touched.repeat_password && errors.repeat_password && (\n                      <ErrorMessage name=\"repeat_password\">\n                        {msg => <Error>{msg}</Error>}\n                      </ErrorMessage>\n                    )}\n                  </Input>\n\n                  <Button\n                    type=\"submit\"\n                    disabled={!isValid && !dirty}\n                    onClick={handleSubmit}\n                  >\n                    <TextButton>Зареєструватися</TextButton>\n                  </Button>\n\n                  <NavBox>\n                    <NavText>Вже з нами?</NavText>\n                    <NavLogin to=\"/login\">Увійти</NavLogin>\n                  </NavBox>\n                </FormInput>\n              </Form>\n            )}\n          </Formik>\n        </FormBox>\n\n        {isTablet && (\n          <TextBox>\n            <Title>Books Reading</Title>\n            <List>\n              <MainListItem>\n                <Subtitle>Допоможе вам</Subtitle>\n                <List>\n                  <ListItem>\n                    Швидше сформулювати свою ціль і розпочати читати\n                  </ListItem>\n                  <ListItem>\n                    Пропорційно розподілити навантаження на кожний день\n                  </ListItem>\n                  <ListItem>Відстежувати особистий успіх</ListItem>\n                </List>\n              </MainListItem>\n              <MainListItem>\n                <Subtitle>Також ви зможете </Subtitle>\n                <List>\n                  <ListItem>\n                    Формувати особисту думку незалежну від інших\n                  </ListItem>\n                  <ListItem>\n                    Підвищити свої професійні якості опираючись на нові знання\n                  </ListItem>\n                  <ListItem>Стати цікавим співрозмовником</ListItem>\n                </List>\n              </MainListItem>\n            </List>\n          </TextBox>\n        )}\n      </Box>\n    </>\n  );\n}\n"],"names":["Box","styled","FormBox","mobile","mobile2x","tablet","tablet2x","desktop","desktop2x","FormInput","NavGoogle","NavLink","GoogleButton","TextGoogleButton","google","Input","InputField","Label","Star","FieldInput","Field","Button","TextButton","NavBox","NavText","NavLogin","Error","TextBox","Title","List","Subtitle","MainListItem","ListItem","vector","Register","dispatch","useDispatch","isTablet","useMediaQuery","query","validationSchema","yup","shape","name","max","required","email","password","min","repeat_password","oneOf","initialValues","validateOnBlur","onSubmit","values","resetForm","authOperations","errors","touched","handleChange","handleBlur","isValid","handleSubmit","dirty","type","to","htmlFor","placeholder","value","onChange","onBlur","msg","disabled","onClick"],"sourceRoot":""}