{"version":3,"file":"static/js/985.73d45887.chunk.js","mappings":"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","sources":["images/firstpagevector.svg","pages/styled/Register.styled.js","pages/Register.js"],"sourcesContent":["var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgFirstpagevector(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 4,\n    height: 8,\n    viewBox: \"0 0 4 8\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M3.91561 3.78047L0.489905 0.0904667C0.377666 -0.0303609 0.195949 -0.0301578 0.0838976 0.0910917C-0.0280667 0.212326 -0.0277773 0.408716 0.0844763 0.529637L3.30627 4.00001L0.0843605 7.47038C-0.0278786 7.59131 -0.028168 7.78758 0.0837818 7.90883C0.139952 7.96961 0.213539 8 0.287126 8C0.360525 8 0.433822 7.96981 0.489891 7.90945L3.91561 4.21954C3.96967 4.16145 4 4.08239 4 4.00001C4 3.91764 3.96958 3.83867 3.91561 3.78047Z\",\n    fill: \"#FF6B08\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgFirstpagevector);\nexport default __webpack_public_path__ + \"static/media/firstpagevector.3158c564816e324e859d08b2c56f5594.svg\";\nexport { ForwardRef as ReactComponent };","import styled from 'styled-components';\nimport mobile from '../../images/login + register img/mobile/mobile.jpg';\nimport mobile2x from '../../images/login + register img/mobile/mobile@2x.jpg';\nimport tablet from '../../images/login + register img/tablet/tablet.jpg';\nimport tablet2x from '../../images/login + register img/tablet/tablet@2x.jpg';\nimport desktop from '../../images/login + register img/desktop/desktop.jpg';\nimport desktop2x from '../../images/login + register img/desktop/desktop@2x.jpg';\n\nimport google from '../../images/googleicon.svg';\nimport vector from '../../images/firstpagevector.svg';\n\nimport { Field } from 'formik';\nimport { NavLink } from 'react-router-dom';\n\nexport const Box = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  @media screen and (min-width: 1280px) {\n    flex-direction: row;\n  }\n`;\n\nexport const FormBox = styled.div`\n  width: 320px;\n  height: 648px;\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  background-image: linear-gradient(rgba(9, 30, 63, 0.8), rgba(9, 30, 63, 0.8)),\n    url(${mobile});\n\n  @media screen and (min-device-pixel-ratio: 2),\n    (min-resolution: 192dpi),\n    (min-resolution: 2dppx) {\n    background-image: linear-gradient(\n        rgba(9, 30, 63, 0.8),\n        rgba(9, 30, 63, 0.8)\n      ),\n      url(${mobile2x});\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 768px;\n    height: 797px;\n    background-image: linear-gradient(\n        rgba(9, 30, 63, 0.8),\n        rgba(9, 30, 63, 0.8)\n      ),\n      url(${tablet});\n\n    @media screen and (min-device-pixel-ratio: 2),\n      (min-resolution: 192dpi),\n      (min-resolution: 2dppx) {\n      background-image: linear-gradient(\n          rgba(9, 30, 63, 0.8),\n          rgba(9, 30, 63, 0.8)\n        ),\n        url(${tablet2x});\n    }\n  }\n\n  @media screen and (min-width: 768px) and (max-width: 1280px) {\n    margin-bottom: 64px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    width: 549px;\n    height: 850px;\n    background-image: linear-gradient(\n        rgba(9, 30, 63, 0.8),\n        rgba(9, 30, 63, 0.8)\n      ),\n      url(${desktop});\n\n    @media screen and (min-device-pixel-ratio: 2),\n      (min-resolution: 192dpi),\n      (min-resolution: 2dppx) {\n      background-image: linear-gradient(\n          rgba(9, 30, 63, 0.8),\n          rgba(9, 30, 63, 0.8)\n        ),\n        url(${desktop2x});\n    }\n  }\n\n  background-repeat: no-repeat;\n  background-size: cover;\n`;\n\nexport const FormInput = styled.div`\n  height: 609px;\n\n  @media screen and (min-width: 768px) {\n    margin: 0 auto;\n    width: 400px;\n    background: #ffffff;\n    margin-top: 64px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    left: 75px;\n    top: 150px;\n    margin-top: 90px;\n  }\n\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const GoogleButton = styled.button`\n  margin-top: 32px;\n  margin-bottom: 28px;\n\n  @media screen and (min-width: 768px) {\n    margin-top: 40px;\n  }\n\n  width: 150px;\n  height: 40px;\n  left: 310px;\n  top: 164px;\n  margin-left: auto;\n  margin-right: auto;\n\n  background: #f5f7fa;\n  box-shadow: 0px 2px 2px rgba(9, 30, 63, 0.15);\n  border: none;\n\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\nexport const TextGoogleButton = styled.p`\n  font-style: normal;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 38px;\n\n  text-align: center;\n\n  color: #707375;\n\n  /* ::before {\n    content: '';\n    margin-right: 14px;\n    padding-top: 11px;\n    padding-left: 2px;\n    padding-right: 2px;\n    background-image: url(${google});\n    background-repeat: no-repeat;\n    background-position: center;\n    background-size: contain;\n  } */\n`;\n\nexport const Input = styled.div`\n  margin-bottom: 20px;\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 32px;\n  }\n\n  margin-left: auto;\n  margin-right: auto;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const InputField = styled.div`\n  margin-bottom: 20px;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Label = styled.label`\n  width: 156px;\n  left: 20px;\n  top: 160px;\n  margin-bottom: 8px;\n\n  font-style: normal;\n  font-weight: 600;\n  font-size: 14px;\n  line-height: 17px;\n\n  color: #ffffff;\n  @media screen and (min-width: 768px) {\n    width: 154px;\n    height: 17px;\n    left: 115px;\n    top: 353px;\n\n    font-weight: 500;\n\n    color: #898f9f;\n  }\n`;\n\nexport const FieldInput = styled(Field)`\n  width: 280px;\n  height: 42px;\n  left: 20px;\n  top: 185px;\n  padding-left: 8px;\n\n  @media screen and (min-width: 768px) {\n    width: 320px;\n    left: 115px;\n    top: 378px;\n    padding-left: 12px;\n  }\n\n  background: #f5f7fa;\n  box-shadow: inset 0px 1px 2px rgba(29, 29, 27, 0.15);\n\n  border: none;\n`;\n\nexport const Button = styled.button`\n  width: 280px;\n  height: 60px;\n  left: 20px;\n  top: 334px;\n  margin-bottom: 20px;\n\n  @media screen and (min-width: 768px) {\n    width: 320px;\n    left: 115px;\n    top: 539px;\n\n    &:hover {\n      cursor: pointer;\n    }\n  }\n\n  background: #ff6b08;\n  margin-left: auto;\n  margin-right: auto;\n  border: none;\n`;\n\nexport const TextButton = styled.p`\n  font-style: normal;\n  font-weight: 600;\n  font-size: 16px;\n  line-height: 20px;\n  text-align: center;\n  color: #ffffff;\n`;\n\nexport const NavBox = styled.div`\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n`;\nexport const NavText = styled.p`\n  width: 135px;\n  height: 16px;\n  left: 317px;\n  top: 677px;\n\n  font-style: normal;\n  font-weight: 500;\n  font-size: 13px;\n  line-height: 16px;\n\n  text-align: center;\n\n  color: #898f9f;\n`;\n\nexport const NavLogin = styled(NavLink)`\n  font-style: normal;\n  font-weight: 500;\n  font-size: 13px;\n  line-height: 16px;\n\n  text-decoration-line: underline;\n  text-align: center;\n\n  color: #ff6b08;\n`;\n\nexport const TextBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  @media screen and (min-width: 1280px) {\n    margin-left: 127px;\n    margin-top: 179px;\n  }\n`;\n\nexport const Title = styled.h1`\n  margin-bottom: 32px;\n  font-family: 'Abril Fatface';\n  font-weight: 400;\n  font-size: 34px;\n  line-height: 1.12;\n  color: #242a37;\n  text-align: center;\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 48px;\n  }\n`;\n\nexport const List = styled.ul`\n  list-style: none;\n`;\n\nexport const Subtitle = styled.h2`\n  margin-bottom: 14px;\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 1.9;\n  color: #242a37;\n`;\n\nexport const MainListItem = styled.li`\n  :first-child {\n    margin-bottom: 24px;\n  }\n  @media screen and (min-width: 768px) {\n    :first-child {\n      margin-bottom: 32px;\n    }\n  }\n`;\n\nexport const ListItem = styled.li`\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 1.21;\n  color: #898f9f;\n  ::before {\n    content: '';\n    margin-right: 12px;\n    padding-top: 1px;\n    padding-left: 2px;\n    padding-right: 2px;\n    background-image: url(${vector});\n    background-repeat: no-repeat;\n    background-position: center;\n    background-size: contain;\n    color: #ff6b08;\n  }\n  :not(:last-child) {\n    margin-bottom: 12px;\n  }\n`;\n","import * as React from 'react';\nimport { Formik, Form, ErrorMessage } from 'formik';\n// import * as Yup from 'yup';\n\nimport {\n  Box,\n  FormBox,\n  FormInput,\n  GoogleButton,\n  TextGoogleButton,\n  Input,\n  InputField,\n  Label,\n  FieldInput,\n  Button,\n  TextButton,\n  NavLogin,\n  NavText,\n  NavBox,\n  TextBox,\n  Title,\n  List,\n  MainListItem,\n  Subtitle,\n  ListItem,\n} from './styled/Register.styled';\n\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport authOperations from '../redux/authAPI/auth-operation';\nimport { useMediaQuery } from 'react-responsive';\n\nexport default function Register() {\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [repeat_password, setRepeatPassword] = useState('');\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'name':\n        return setName(value);\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        return setPassword(value);\n      case 'repeat_password':\n        return setRepeatPassword(value);\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    dispatch(\n      authOperations.register({ name, email, password, repeat_password })\n    );\n  };\n\n  const isTablet = useMediaQuery({\n    query: '(min-width: 768px)',\n  });\n\n  return (\n    <>\n      <Box>\n        <FormBox>\n          <Formik\n            initialValues={{\n              name: '',\n              email: '',\n              password: '',\n              repeat_password: '',\n            }}\n            // validationSchema={Yup.object({\n            //   name: Yup.string()\n            //     .max(15, 'Максимум 15 символів')\n            //     .required(\"Поле обов'язкове\"),\n            //   email: Yup.string()\n            //     .email('Невірна адреса')\n            //     .required(\"Поле обов'язкове\"),\n            //   password: Yup.string()\n            //     .min(6, 'Мінімум 6 символів')\n            //     .required(\"Поле обов'язкове\"),\n            //   repeatPassword: Yup.string()\n            //     .min(6, 'Мінімум 6 символів')\n            //     .required(\"Поле обов'язкове\"),\n            // })}\n            // onSubmit={(values, { setSubmitting }) => {\n            //   setTimeout(() => {\n            //     alert(JSON.stringify(values, null, 2));\n            //     setSubmitting(false);\n            //   }, 400);\n            // }}\n            onSubmit={handleSubmit}\n          >\n            <Form onSubmit={handleSubmit}>\n              <FormInput>\n                <Input>\n                  <GoogleButton type=\"submit\">\n                    <TextGoogleButton>Google</TextGoogleButton>\n                  </GoogleButton>\n                  <InputField>\n                    <Label htmlFor=\"name\">Ім'я</Label>\n                    <FieldInput\n                      name=\"name\"\n                      type=\"text\"\n                      placeholder=\"...\"\n                      value={name}\n                      onChange={handleChange}\n                    />\n                    <ErrorMessage name=\"name\" />\n                  </InputField>\n                  <InputField>\n                    <Label htmlFor=\"email\">Електронна адреса</Label>\n                    <FieldInput\n                      name=\"email\"\n                      type=\"email\"\n                      placeholder=\"your@email.com\"\n                      value={email}\n                      onChange={handleChange}\n                    />\n                    <ErrorMessage name=\"email\" />\n                  </InputField>\n                  <InputField>\n                    <Label htmlFor=\"password\">Пароль</Label>\n                    <FieldInput\n                      name=\"password\"\n                      type=\"text\"\n                      placeholder=\"...\"\n                      value={password}\n                      onChange={handleChange}\n                    />\n                    <ErrorMessage name=\"password\" />\n                  </InputField>\n                  <Label htmlFor=\"repeatPassword\">Підтвердіть пароль</Label>\n                  <FieldInput\n                    name=\"repeat_password\"\n                    type=\"text\"\n                    placeholder=\"...\"\n                    value={repeat_password}\n                    onChange={handleChange}\n                  />\n                  <ErrorMessage name=\"repeatPassword\" />\n                </Input>\n\n                <Button type=\"submit\">\n                  <TextButton>Зареєструватися</TextButton>\n                </Button>\n\n                <NavBox>\n                  <NavText>\n                    Вже з нами? <NavLogin to=\"/login\">Увійти</NavLogin>\n                  </NavText>\n                </NavBox>\n              </FormInput>\n            </Form>\n          </Formik>\n        </FormBox>\n\n        {isTablet && (\n          <TextBox>\n            <Title>Books Reading</Title>\n            <List>\n              <MainListItem>\n                <Subtitle>Допоможе вам</Subtitle>\n                <List>\n                  <ListItem>\n                    Швидше сформулювати свою ціль і розпочати читати\n                  </ListItem>\n                  <ListItem>\n                    Пропорційно розподілити навантаження на кожний день\n                  </ListItem>\n                  <ListItem>Відстежувати особистий успіх</ListItem>\n                </List>\n              </MainListItem>\n              <MainListItem>\n                <Subtitle>Також ви зможете </Subtitle>\n                <List>\n                  <ListItem>\n                    Формувати особисту думку незалежну від інших\n                  </ListItem>\n                  <ListItem>\n                    Підвищити свої професійні якості опираючись на нові знання\n                  </ListItem>\n                  <ListItem>Стати цікавим співрозмовником</ListItem>\n                </List>\n              </MainListItem>\n            </List>\n          </TextBox>\n        )}\n      </Box>\n    </>\n  );\n}\n"],"names":["Box","styled","FormBox","mobile","mobile2x","tablet","tablet2x","desktop","desktop2x","FormInput","GoogleButton","TextGoogleButton","google","Input","InputField","Label","FieldInput","Field","Button","TextButton","NavBox","NavText","NavLogin","NavLink","TextBox","Title","List","Subtitle","MainListItem","ListItem","vector","Register","dispatch","useDispatch","useState","name","setName","email","setEmail","password","setPassword","repeat_password","setRepeatPassword","handleChange","target","value","handleSubmit","event","preventDefault","authOperations","isTablet","useMediaQuery","query","initialValues","onSubmit","type","htmlFor","placeholder","onChange","to"],"sourceRoot":""}