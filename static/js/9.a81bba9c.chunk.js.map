{"version":3,"file":"static/js/9.a81bba9c.chunk.js","mappings":"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","sources":["pages/styled/Register.styled.js","pages/Register.js"],"sourcesContent":["import styled from 'styled-components';\nimport mobile from '../../images/login + register img/mobile/mobile.jpg';\nimport mobile2x from '../../images/login + register img/mobile/mobile@2x.jpg';\nimport tablet from '../../images/login + register img/tablet/tablet.jpg';\nimport tablet2x from '../../images/login + register img/tablet/tablet@2x.jpg';\nimport desktop from '../../images/login + register img/desktop/desktop.jpg';\nimport desktop2x from '../../images/login + register img/desktop/desktop@2x.jpg';\n\nimport google from '../../img/googleicon.svg';\n// import vector from '../../img/firstpagevector.svg';\n\nimport { Field } from 'formik';\nimport { NavLink } from 'react-router-dom';\n\nexport const Box = styled.div`\n  width: 320px;\n  height: 648px;\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  background-image: linear-gradient(rgba(9, 30, 63, 0.8), rgba(9, 30, 63, 0.8)),\n    url(${mobile});\n\n  @media screen and (min-device-pixel-ratio: 2),\n    (min-resolution: 192dpi),\n    (min-resolution: 2dppx) {\n    background-image: linear-gradient(\n        rgba(9, 30, 63, 0.8),\n        rgba(9, 30, 63, 0.8)\n      ),\n      url(${mobile2x});\n  }\n\n  margin-top: 60px;\n\n  @media screen and (min-width: 768px) {\n    width: 768px;\n    height: 797px;\n    background-image: linear-gradient(\n        rgba(9, 30, 63, 0.8),\n        rgba(9, 30, 63, 0.8)\n      ),\n      url(${tablet});\n\n    @media screen and (min-device-pixel-ratio: 2),\n      (min-resolution: 192dpi),\n      (min-resolution: 2dppx) {\n      background-image: linear-gradient(\n          rgba(9, 30, 63, 0.8),\n          rgba(9, 30, 63, 0.8)\n        ),\n        url(${tablet2x});\n    }\n  }\n\n  @media screen and (min-width: 1280px) {\n    width: 549px;\n    height: 850px;\n    background-image: linear-gradient(\n        rgba(9, 30, 63, 0.8),\n        rgba(9, 30, 63, 0.8)\n      ),\n      url(${desktop});\n\n    @media screen and (min-device-pixel-ratio: 2),\n      (min-resolution: 192dpi),\n      (min-resolution: 2dppx) {\n      background-image: linear-gradient(\n          rgba(9, 30, 63, 0.8),\n          rgba(9, 30, 63, 0.8)\n        ),\n        url(${desktop2x});\n    }\n  }\n\n  background-repeat: no-repeat;\n  background-size: cover;\n`;\n\nexport const FormInput = styled.div`\n  height: 609px;\n\n  @media screen and (min-width: 768px) {\n    position: absolute;\n    width: 400px;\n    left: 185px;\n    top: 124px;\n    background: #ffffff;\n  }\n\n  @media screen and (min-width: 1280px) {\n    left: 75px;\n    top: 150px;\n  }\n\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const GoogleButton = styled.button`\n  margin-top: 32px;\n  margin-bottom: 28px;\n\n  @media screen and (min-width: 768px) {\n    margin-top: 40px;\n  }\n\n  width: 150px;\n  height: 40px;\n  left: 310px;\n  top: 164px;\n  margin-left: auto;\n  margin-right: auto;\n\n  background: #f5f7fa;\n  box-shadow: 0px 2px 2px rgba(9, 30, 63, 0.15);\n  border: none;\n\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\nexport const TextGoogleButton = styled.p`\n  font-style: normal;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 38px;\n\n  text-align: center;\n\n  color: #707375;\n\n  /* ::before {\n    content: '';\n    margin-right: 14px;\n    padding-top: 11px;\n    padding-left: 2px;\n    padding-right: 2px;\n    background-image: url(${google});\n    background-repeat: no-repeat;\n    background-position: center;\n    background-size: contain;\n  } */\n`;\n\nexport const Input = styled.div`\n  margin-bottom: 20px;\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 32px;\n  }\n\n  margin-left: auto;\n  margin-right: auto;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const InputField = styled.div`\n  margin-bottom: 20px;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Label = styled.label`\n  width: 156px;\n  left: 20px;\n  top: 160px;\n  margin-bottom: 8px;\n\n  font-style: normal;\n  font-weight: 600;\n  font-size: 14px;\n  line-height: 17px;\n\n  color: #ffffff;\n  @media screen and (min-width: 768px) {\n    width: 154px;\n    height: 17px;\n    left: 115px;\n    top: 353px;\n\n    font-weight: 500;\n\n    color: #898f9f;\n  }\n`;\n\nexport const FieldInput = styled(Field)`\n  width: 280px;\n  height: 42px;\n  left: 20px;\n  top: 185px;\n  padding-left: 8px;\n\n  @media screen and (min-width: 768px) {\n    width: 320px;\n    left: 115px;\n    top: 378px;\n    padding-left: 12px;\n  }\n\n  background: #f5f7fa;\n  box-shadow: inset 0px 1px 2px rgba(29, 29, 27, 0.15);\n\n  border: none;\n`;\n\nexport const Button = styled.button`\n  width: 280px;\n  height: 60px;\n  left: 20px;\n  top: 334px;\n  margin-bottom: 20px;\n\n  @media screen and (min-width: 768px) {\n    width: 320px;\n    left: 115px;\n    top: 539px;\n\n    &:hover {\n      cursor: pointer;\n    }\n  }\n\n  background: #ff6b08;\n  margin-left: auto;\n  margin-right: auto;\n  border: none;\n`;\n\nexport const TextButton = styled.p`\n  font-style: normal;\n  font-weight: 600;\n  font-size: 16px;\n  line-height: 20px;\n  text-align: center;\n  color: #ffffff;\n`;\n\nexport const NavBox = styled.div`\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n`;\nexport const NavText = styled.p`\n  width: 135px;\n  height: 16px;\n  left: 317px;\n  top: 677px;\n\n  font-style: normal;\n  font-weight: 500;\n  font-size: 13px;\n  line-height: 16px;\n\n  text-align: center;\n\n  color: #898f9f;\n`;\n\nexport const NavLogin = styled(NavLink)`\n  font-style: normal;\n  font-weight: 500;\n  font-size: 13px;\n  line-height: 16px;\n\n  text-decoration-line: underline;\n  text-align: center;\n\n  color: #ff6b08;\n`;\n\n// export const Title = styled.h1`\n//   margin-bottom: 32px;\n//   font-family: 'Abril Fatface';\n//   font-weight: 400;\n//   font-size: 34px;\n//   line-height: 1.12;\n//   color: #242a37;\n//   text-align: center;\n//   @media screen and (min-width: 768px) {\n//     margin-bottom: 48px;\n//   }\n// `;\n\n// export const List = styled.ul`\n//   list-style: none;\n// `;\n\n// export const Subtitle = styled.h2`\n//   margin-bottom: 14px;\n//   //   font-family: 'Montserrat';\n//   font-weight: 500;\n//   font-size: 20px;\n//   line-height: 1.9;\n//   color: #242a37;\n// `;\n\n// export const MainListItem = styled.li`\n//   :first-child {\n//     margin-bottom: 24px;\n//   }\n//   @media screen and (min-width: 768px) {\n//     :first-child {\n//       margin-bottom: 32px;\n//     }\n//   }\n// `;\n\n// export const ListItem = styled.li`\n//   //   font-family: 'Montserrat';\n//   font-weight: 500;\n//   font-size: 14px;\n//   line-height: 1.21;\n//   color: #898f9f;\n//   ::before {\n//     content: '';\n//     margin-right: 12px;\n//     padding-top: 1px;\n//     padding-left: 2px;\n//     padding-right: 2px;\n//     background-image: url(${vector});\n//     background-repeat: no-repeat;\n//     background-position: center;\n//     background-size: contain;\n//     color: #ff6b08;\n//   }\n//   :not(:last-child) {\n//     margin-bottom: 12px;\n//   }\n// `;\n","import * as React from 'react';\nimport { Formik, Form, ErrorMessage } from 'formik';\n// import * as Yup from 'yup';\n\nimport {\n  Box,\n  FormInput,\n  GoogleButton,\n  TextGoogleButton,\n  Input,\n  InputField,\n  Label,\n  FieldInput,\n  Button,\n  TextButton,\n  NavLogin,\n  NavText,\n  NavBox,\n  //  Title,\n  // List,\n  // MainListItem,\n  // Subtitle,\n  // ListItem,\n} from './styled/Register.styled';\n\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport authOperations from '../redux/authAPI/auth-operation';\n\nexport default function Register() {\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [repeat_password, setRepeatPassword] = useState('');\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'name':\n        return setName(value);\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        return setPassword(value);\n      case 'repeat_password':\n        return setRepeatPassword(value);\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    dispatch(\n      authOperations.register({ name, email, password, repeat_password })\n    );\n  };\n\n  return (\n    <Box>\n      <Formik\n         initialValues={{\n           name: '',\n           email: '',\n           password: '',\n           repeat_password: '',\n         }}\n\n        // validationSchema={Yup.object({\n        //   name: Yup.string()\n        //     .max(15, 'Максимум 15 символів')\n        //     .required(\"Поле обов'язкове\"),\n        //   email: Yup.string()\n        //     .email('Невірна адреса')\n        //     .required(\"Поле обов'язкове\"),\n        //   password: Yup.string()\n        //     .min(6, 'Мінімум 6 символів')\n        //     .required(\"Поле обов'язкове\"),\n        //   repeatPassword: Yup.string()\n        //     .min(6, 'Мінімум 6 символів')\n        //     .required(\"Поле обов'язкове\"),\n        // })}\n        /* onSubmit={(values, { setSubmitting }) => {\n          setTimeout(() => {\n            alert(JSON.stringify(values, null, 2));\n            setSubmitting(false);\n          }, 400);\n        }} */\n        onSubmit={handleSubmit}\n      >\n       \n        <Form onSubmit={handleSubmit}>\n          <FormInput>\n            <Input>\n              <GoogleButton type=\"submit\">\n                <TextGoogleButton>Google</TextGoogleButton>\n              </GoogleButton>\n              <InputField>\n                <Label htmlFor=\"name\">Ім'я</Label>\n                <FieldInput\n                  name=\"name\"\n                  value={name}\n                  type=\"text\"\n                  placeholder=\"...\"\n                  onChange={handleChange}\n                />\n                <ErrorMessage name=\"name\" />\n              </InputField>\n              <InputField>\n                <Label htmlFor=\"email\">Електронна адреса</Label>\n                <FieldInput\n                  name=\"email\"\n                  type=\"email\"\n                  value={email}\n                  placeholder=\"your@email.com\"\n                  onChange={handleChange}\n                />\n                <ErrorMessage name=\"email\" />\n              </InputField>\n              <InputField>\n                <Label htmlFor=\"password\">Пароль</Label>\n                <FieldInput\n                  name=\"password\"\n                  type=\"text\"\n                  value={password}\n                  placeholder=\"...\"\n                  onChange={handleChange}\n                />\n                <ErrorMessage name=\"password\" />\n              </InputField>\n              <Label htmlFor=\"repeatPassword\">Підтвердіть пароль</Label>\n              <FieldInput\n                name=\"repeat_password\"\n                type=\"text\"\n                value={repeat_password}\n                placeholder=\"...\"\n                onChange={handleChange}\n              />\n              <ErrorMessage name=\"repeatPassword\" />\n            </Input>\n            <Button type=\"submit\">\n              <TextButton>Зареєструватися</TextButton>\n            </Button>\n            <NavBox>\n              <NavText>\n                Вже з нами? <NavLogin to=\"/login\">Увійти</NavLogin>\n              </NavText>\n            </NavBox>\n          </FormInput>\n        </Form>\n      </Formik>\n      {/* <Title>Books Reading</Title>\n      <List>\n        <MainListItem>\n          <Subtitle>Will help you to</Subtitle>\n          <List>\n            <ListItem>Create your goal faster and proceed to read</ListItem>\n            <ListItem>Divide process proportionally for each day</ListItem>\n            <ListItem>Track your success</ListItem>\n          </List>\n        </MainListItem>\n        <MainListItem>\n          <Subtitle>You may also</Subtitle>\n          <List>\n            <ListItem>Pose your own independent point of view</ListItem>\n            <ListItem>\n              Improve your professional skills according to new knowledge\n            </ListItem>\n            <ListItem>Become an interesting interlocutor</ListItem>\n          </List>\n        </MainListItem>\n      </List> */}\n    </Box>\n  );\n}\n"],"names":["Box","styled","mobile","mobile2x","tablet","tablet2x","desktop","desktop2x","FormInput","GoogleButton","TextGoogleButton","google","Input","InputField","Label","FieldInput","Field","Button","TextButton","NavBox","NavText","NavLogin","NavLink","Register","dispatch","useDispatch","useState","name","setName","email","setEmail","password","setPassword","repeat_password","setRepeatPassword","handleChange","target","value","handleSubmit","event","preventDefault","authOperations","initialValues","onSubmit","type","htmlFor","placeholder","onChange","to"],"sourceRoot":""}